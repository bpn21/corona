rest API (Representational state transfer) 

This is nothing but architecture.
rest and api are completely different kura ho
dutai kura le banera .. rest api ho

REST bhaney ko pani eauta architecture ho..
aile sama hamile heyreko MVC architecture.
communication between model and  controller
communication between view and  model


REST pani eauta architeture ho 
1) HTTP PROTOCOL MUST BE USED
2) HTTP VERB - correct use of http verb
http verb ko correct verb huna paryo
i.e
get ma fetch
put ma update nai gerko cha( purano metho... path method ma ni garna sakinch )
post ma insert nai garko chau
delete ma delete nai gareko chau


Rest architecture le data ni object ma khojcha.. so res.json() user garerako
json mai hunu pacha bhaney eauta manyeta

HTTP IS A STATELESS PROTOCOL
REST architecture hunako lagi http protocal use hunai paryo
http afaima stateless protocol ho


******************************************************
documentation padha khera.. stateless protocal use hunai paryo bhancha..
teo bhaneyko http nai use gana bhayeko


rest architecture completely stateless huna paryo
correct use of htp verb hunna paryo
http ma json format use huna paryo


What is state less protocol ?

Http is a stateless protocol.(UDP =connection Less)
paila ko request kai pani tha hudaina.
login garyo sakyo..
paila ko login bhako theo.. k bhako theo... matlab huaina.
i.e
pailako STATE kai pani tha hudaina
pailako request ko state kai pani tha hudaina
haraek req as new request

kosko request ayo bhaneyra tha huney nai eai token, session cookies bata ho


WHAT IS STATE FULL PROTOCOL?
connection bhaye pachi.. continous connection (TCP)

TCP  = connection orriented
UDP =connection Less



kosko request ayo bhaneyra tha huney nai eai token, session cookies bata ho
>>>>>>>>>>>>>>>>>>>>>>.Http is a stateless protocol<<<<<<<<<<<<<<<<<<<<<<<,,


what is tcp and udp ?
TCP  = connection oriented
eakcoti conntion bhaye pachi ..connection establish bhaerakhnu paryo
paila k k bhayo, abo k k jadai cha
abo k k jadai cha bhaney kura tw.. paila k k gaayo tha hunu pacha....

**************************************************************************
UDP = connection Less

HTTP IS  UDP  i.e COMPLETELY state less protocol


***********************************************************************************************************
MODULE BASE ARCHITECTURE / COMPONENT BASE ARCHITECTURE..
backend ma chai j bhanda ni huncha
Exact difference chai anguar garda tha huncha

1st we make a new folder named component in outermost layer. 
inside component 

i.e component/ product for products
component/product/model.js
component/product/query.js
>>>this file will maintain db query.js
component/product/controller.js
>>>application or business logic of application
component/product/routes
api
component/product/helpers
>>>reusable code / functions used by different modules

**********************************************************************************************************

SURUMA OUTER LAYER MA SAKAUNEY KI INNER LAYER SAKAUNEY ?
OUTER LAYERS BATA SURU GARNEY HO BHANEY
Path diyera kun file lai call gareney tha huna paryo....
abo path bhaney bitikai routes bheney folder routes bhaney path

INNER LAYER BATA SURU GARNEY HO BHANEY  MODEL BATA SURU GARNA PARYO

model>>
// we make schema

query>>
(queryma req,res,next aaunu hudaina..i.e middleware aaunu hudaina)
query ma condition lagauney
require (./../../product.model)
function declare garney ani function ko argument ma condition rakhedey ani code lekhdai janey
HERE WE HAVE A PROBLEM IN QUERY 
I.E  WE CANT USE NEXT( ) BECAUSE we dont use middleware
so we either call back function or promise object

controller>>
(req,res,next)middleware  huncha.( business logic..+ end point ko kam)
var productQuery = require(./../query/product.query)
query ma bhako function controller ma property bhaedincha where product query chai object

>>routes>>
var producctController = require(./../controller/productController.js)
router = require('express').Router();
Routing garney
router.get('./',productController.get)
where get is funcition in controller which takes one argument and that function is called from query and query takes a with helper
router.get('./:id',productController.getById)
...
..

>>api (outer layerma banauney)
require(./../productRout)




